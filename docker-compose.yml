version: "3.9"
volumes:
  songs_data:  # Create a volume core_data that will contain the data for 'songs_persistence', such that when the container is stopped / crashes, the data remains.
  activities_data:
  authentication_data:
  playlists_data:
  socials_data:
services:
  songs_persistence:
    image: docker.io/postgres
    container_name: songs_persistence
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./songs_persistence/:/docker-entrypoint-initdb.d
      - songs_data:/var/lib/postgresql/data
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/init.sh && /usr/local/bin/docker-entrypoint.sh postgres"

  songs:
    build: ./songs
    container_name: songs
    ports:
      - 5001:5000
    depends_on:
      - songs_persistence

  activities_persistence:
    image: docker.io/postgres
    container_name: activities_persistence
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./activities_persistence/:/docker-entrypoint-initdb.d
      - activities_data:/var/lib/postgresql/data
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/init.sh && /usr/local/bin/docker-entrypoint.sh postgres"

  activities:
    build: ./activities
    container_name: activities
    ports:
      - 5002:5000
    depends_on:
      - activities_persistence

  authentication_persistence:
    image: docker.io/postgres
    container_name: authentication_persistence
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./authentication_persistence/:/docker-entrypoint-initdb.d
      - authentication_data:/var/lib/postgresql/data
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/init.sh && /usr/local/bin/docker-entrypoint.sh postgres"

  authentication:
    build: ./authentication
    container_name: authentication
    ports:
      - 5003:5000
    depends_on:
      - authentication_persistence

  playlists_persistence:
    image: docker.io/postgres
    container_name: playlists_persistence
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./playlists_persistence/:/docker-entrypoint-initdb.d
      - playlists_data:/var/lib/postgresql/data
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/init.sh && /usr/local/bin/docker-entrypoint.sh postgres"

  playlists:
    build: ./playlists
    container_name: playlists
    ports:
      - 5004:5000
    depends_on:
      - playlists_persistence

  socials_persistence:
    image: docker.io/postgres
    container_name: socials_persistence
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./socials_persistence/:/docker-entrypoint-initdb.d
      - socials_data:/var/lib/postgresql/data
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/init.sh && /usr/local/bin/docker-entrypoint.sh postgres"

  socials:
    build: ./socials
    container_name: socials
    ports:
      - 5005:5000
    depends_on:
      - socials_persistence

  gui:
    build: ./gui
    container_name: gui
    ports:
      - 5000:5000

